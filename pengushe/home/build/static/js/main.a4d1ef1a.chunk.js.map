{"version":3,"sources":["components/FileUpload.js","index.js"],"names":["upload_preset","FileUpload","props","useState","url","setURL","imageSelect","setImageSelected","showFirstButton","setShowFirstButton","showSecondButton","setShowSecondButton","uploadImage","a","formData","FormData","append","Axios","post","then","response","status","window","alert","data","secure_url","changeImgType","event","target","value","className","style","marginTop","type","name","id","onChange","for","class","aria-describedby","aria-label","files","onClick","URL","setValue","App","state","cloudName","profileImg","publicId","width","crop","copied","filterID","bind","changWidth","this","setState","preventDefault","readOnly","text","onCopy","color","thumbnail","fluid","React","Component","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.a4d1ef1a.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Axios from 'axios';\nimport '../style/App.css';\nimport Highlight from 'react-highlight';\n// import useCallback from 'react';\n// import { useDropzone } from 'react-dropzone'\n// import Project from './components/Project';\n// import Sector from './components/Sector'\n// import Image1 from './img/logo.png';\n\nvar upload_preset = \"work_img\";\n\nconst FileUpload = (props) => {\n  // display public_id and secure_url 将这个URL送给代码组：）\n  const [url, setURL] = useState(\"\");\n  // select the image\n  const [imageSelect, setImageSelected] = useState(\"\");\n\n  const [showFirstButton, setShowFirstButton] = useState(true);\n\n  const [showSecondButton, setShowSecondButton] = useState(false);\n  // parameter for uploading to Cloudinary\n  const uploadImage = async () => {\n    const formData = new FormData();\n    formData.append(\"file\", imageSelect);\n    formData.append(\"resource_type\", \"auto\");\n    formData.append(\"upload_preset\", upload_preset);\n    Axios.post(\n      'https://api.cloudinary.com/v1_1/pengushe-home/image/upload',\n      formData\n    ).then(\n      (response) => {\n        if (response.status == 200) {\n          window.alert(\"你的文件已经传送到数据库里：）\");\n          setURL(response.data.secure_url);\n        }\n        else if (response.status == 400) {\n          window.alert(\"文件为空\");\n        }\n        else {\n          window.alert(\"文件超过10M, 请上传小于10M文件\");\n        }\n      });\n\n  }\n  function changeImgType(event) {\n    if (event.target.value == \"option1\") {\n      upload_preset = \"profile_img\";\n    }\n    else {\n      upload_preset = \"work_img\";\n    }\n  }\n  // // select the image in Dropzoon and upload to Cloudinary\n  // const onDrop = useCallback((acceptedFiles) => {\n  //   const formData = new FormData();\n  //   formData.append(\"file\", imageSelect);\n  //   formData.append(\"upload_preset\", \"ugployuy\");\n  //   Axios.post(\n  //     'https://api.cloudinary.com/v1_1/pengushe-home/image/upload',\n  //     formData\n  //   ).then((response) => { window.alert(\"你上传的文件已经传送到数据库里！\") });\n  // }, [])\n  // const { getRootProps, getInputProps} = useDropzone({\n  //   onDrop,\n  //   accept: \"image/*\",\n  //   multiple: true,\n  // });\n\n  return (\n    <div>\n      <div className=\"container\" style={{ marginTop: \"2%\" }}>\n        <div className=\"container\">\n          <div className=\"form-check form-check-inline\">\n            <input className=\"form-check-input\" type=\"radio\" name=\"inlineRadioOptions\" id=\"inlineRadio1\" value=\"option1\"\n              onChange={changeImgType} />\n            <label className=\"form-check-label\" for=\"inlineRadio1\">上传个人头像</label>\n          </div>\n          <div className=\"form-check form-check-inline\">\n            <input className=\"form-;check-input\" type=\"radio\" name=\"inlineRadioOptions\" id=\"inlineRadio2\" value=\"option2\"\n              onChange={changeImgType} />\n            <label className=\"form-check-label\" for=\"inlineRadio2\">上传个人作品</label>\n          </div>\n        </div>\n        <div class=\"input-group\">\n          <input type=\"file\" class=\"form-control\" id=\"inputGroupFile04\" aria-describedby=\"inputGroupFileAddon04\" aria-label=\"Upload\"\n            onChange={(event) => {\n              setImageSelected(event.target.files[0]);\n            }}\n          />\n          {showFirstButton ? <button className=\"btn btn-outline-secondary\" type=\"button\"\n            onClick={() => {\n              uploadImage();\n              setShowFirstButton(false);\n              setShowSecondButton(true);\n            }}\n          >点击上传</button> : null}\n          {showSecondButton ? <button className=\"btn btn-outline-secondary\" type=\"button\"\n            onClick={() => {\n              props.URL.setValue(url);\n              setShowFirstButton(true);\n              setShowSecondButton(false);\n            }}\n          >显示上传URL</button> : null}\n        </div>\n        <div>\n        </div>\n      </div>\n    </div>\n  );\n  {/* <div className=\"form form-inline\">\n    <input type=\"file\" onChange={(event) => {\n      setImageSelected(event.target.files);\n    }} />\n    <button className=\"btn btn-primary btn-block\" onClick={uploadImage}>点击上传</button>\n  </div> */}\n  {/* <div\n    {...getRootProps()}\n    // className={`${styles.dropzone} ${isDragActive ? styles.active : null}`}\n  >\n    <input {...getInputProps()} />\n    <h1>Drop Zone</h1>\n  </div> */}\n}\n\nexport default FileUpload;\n","import React, { Component } from 'react';\nimport ReactDom from 'react-dom';\nimport { Image, Video, Transformation, CloudinaryContext } from 'cloudinary-react';\nimport FileUpload from './components/FileUpload';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cloudName: \"pengushe-home\",\n      profileImg: 'https://res.cloudinary.com/pengushe-home/image/upload/v1611980538/profile_img/duizhang.png',\n      publicId: '76a24be5037645dfd6e194431cc7d38c',\n      width: '0.3',\n      crop: 'scale',\n      url: '',\n      copied: false,\n    };\n    this.filterID = this.filterID.bind(this);\n    this.changWidth = this.changWidth.bind(this);\n  }\n  filterID(event) {\n    this.setState({ publicId: event.target.value });\n    event.preventDefault();\n  }\n  changWidth(event) {\n    this.setState({ width: event.target.value });\n    event.preventDefault();\n  }\n  setValue(url) {\n    this.setState({ url: url });\n  }\n  render() {\n    return (\n      <div>\n        {/* 上传文件 */}\n        <FileUpload URL={\n          { setValue: this.setValue.bind(this) }\n        } />\n        <div>\n          <div class=\"mb-3\">\n            <input type=\"text\" class=\"form-control\" aria-label=\"Default\" aria-describedby=\"inputGroup-sizing-default\"\n              value={this.state.url}\n              onChange={({ target: { url } }) => this.setState({ url, copied: false })} readOnly />\n            <CopyToClipboard text={this.state.url}\n              onCopy={() => this.setState({ copied: true })}>\n              <button>复制URL</button>\n            </CopyToClipboard>\n            {this.state.copied ? <span style={{ color: 'red' }}>Copied.</span> : null}\n          </div>\n        </div>\n        {/* -end- */}\n        <div className=\"input-group mb-3\">\n          <div className=\"input-group-prepend\">\n            <span className=\"input-group-text\" id=\"inputGroup-sizing-default\">查看已经上传的图片</span>\n          </div>\n          <input type=\"text\" className=\"form-control\" aria-label=\"Default\" aria-describedby=\"inputGroup-sizing-default\" onChange={this.filterID} />\n          {/* <div className=\"input-group-prepend\">\n            <span className=\"input-group-text\" id=\"inputGroup-sizing-default\">更改大小 0.5(%) 或者 200 px</span>\n          </div>\n          <input type=\"text\" className=\"form-control\" aria-label=\"Default\" aria-describedby=\"inputGroup-sizing-default\" onChange={this.changWidth} /> */}\n\n        </div>\n        <CloudinaryContext cloudName={this.state.cloudName}>\n\n          <Image publicId={this.state.profileImg} width=\"0.5\" crop=\"scale\" thumbnail />\n          <p> 个人头像</p>\n          <Image publicId={this.state.publicId} width=\"300\" crop=\"scale\" thumbnail fluid/>\n          <p> 查看个人作品（上传作品不超过10M）</p>\n        </CloudinaryContext>\n      </div>\n    );\n  }\n}\n\nReactDom.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}