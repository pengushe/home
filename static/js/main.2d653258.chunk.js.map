{"version":3,"sources":["components/FileUpload.js","index.js"],"names":["upload_preset","FileUpload","props","useState","url","setURL","imageSelect","setImageSelected","uploadImage","a","formData","FormData","append","Axios","post","then","response","window","alert","data","secure_url","error","changeImgType","event","target","value","className","style","marginTop","type","name","id","onChange","for","hidden","files","htmlFor","onClick","selectValue","setValue","App","state","cloudName","publicId","width","crop","copied","filterID","bind","changWidth","this","setState","preventDefault","class","aria-label","aria-describedby","readOnly","text","onCopy","color","React","Component","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.2d653258.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport Axios from 'axios';\nimport '../style/App.css';\nimport Highlight from 'react-highlight';\n// import useCallback from 'react';\n// import { useDropzone } from 'react-dropzone'\n// import Project from './components/Project';\n// import Sector from './components/Sector'\n// import Image1 from './img/logo.png';\n\nvar upload_preset = \"work_img\";\nconst FileUpload = (props) => {\n  // display public_id and secure_url\n  const [url, setURL] = useState(\"\");\n  // select the image\n  const [imageSelect, setImageSelected] = useState(\"将这个URL送给代码组：）\");\n  // parameter for uploading to Cloudinary\n  const uploadImage = async () => {\n    try {\n      const formData = new FormData();\n      formData.append(\"file\", imageSelect);\n      formData.append(\"resource_type\", \"auto\");\n      formData.append(\"upload_preset\", upload_preset);\n      Axios.post(\n        'https://api.cloudinary.com/v1_1/pengushe-home/image/upload',\n        formData\n      ).then(\n        (response) => {\n          window.alert(\"你的文件已经传送到数据库里：）\");\n          setURL(response.data.secure_url);\n        });\n    } catch (error) {\n      window.alert(\"文件没有成功上传，可能是你的文件超过了10M\");\n    }\n  }\n\n  function changeImgType(event) {\n    if (event.target.value == \"option1\") {\n      upload_preset = \"profile_img\";\n    }\n    else {\n      upload_preset = \"work_img\";\n    }\n  }\n  // // select the image in Dropzoon and upload to Cloudinary\n  // const onDrop = useCallback((acceptedFiles) => {\n  //   const formData = new FormData();\n  //   formData.append(\"file\", imageSelect);\n  //   formData.append(\"upload_preset\", \"ugployuy\");\n  //   Axios.post(\n  //     'https://api.cloudinary.com/v1_1/pengushe-home/image/upload',\n  //     formData\n  //   ).then((response) => { window.alert(\"你上传的文件已经传送到数据库里！\") });\n  // }, [])\n  // const { getRootProps, getInputProps} = useDropzone({\n  //   onDrop,\n  //   accept: \"image/*\",\n  //   multiple: true,\n  // });\n\n  return (\n    <div>\n      <div className=\"container\" style={{ marginTop: \"2%\" }}>\n        <div className=\"form-check form-check-inline\">\n          <input className=\"form-check-input\" type=\"radio\" name=\"inlineRadioOptions\" id=\"inlineRadio1\" value=\"option1\"\n            onChange={changeImgType} />\n          <label className=\"form-check-label\" for=\"inlineRadio1\">上传个人图像</label>\n        </div>\n        <div className=\"form-check form-check-inline\">\n          <input className=\"form-check-input\" type=\"radio\" name=\"inlineRadioOptions\" id=\"inlineRadio2\" value=\"option2\"\n            onChange={changeImgType} />\n          <label className=\"form-check-label\" for=\"inlineRadio2\">上传个人素材</label>\n        </div>\n        <h1 hidden>文件已经准备好上传，点击上传键</h1>\n        <div className=\"input-group\">\n          <div className=\"custom-file\">\n            <input type=\"file\" className=\"custom-file-input\" id=\"文件上传\"\n              onChange={(event) => {\n                setImageSelected(event.target.files[0]);\n                window.alert(\"文件已经准备好上传，点击上传键，如果想换一个图片上传，点击OK，然后请先刷新界面\");\n              }}\n            />\n            <label className=\"custom-file-label\" htmlFor=\"文件上传\">选择文件</label>\n          </div>\n          <div className=\"input-group-append\">\n            <button className=\"btn btn-outline-secondary\" type=\"button\"\n              onClick={uploadImage}\n            >点击上传</button>\n            <button className=\"btn btn-sm btn-outline-secondary\" type=\"button\"\n              onClick={() => props.selectValue.setValue(url)}\n            >显示图片的URL</button>\n          </div>\n        </div>\n        <div>\n        </div>\n      </div>\n    </div>\n  );\n  {/* <div className=\"form form-inline\">\n    <input type=\"file\" onChange={(event) => {\n      setImageSelected(event.target.files);\n    }} />\n    <button className=\"btn btn-primary btn-block\" onClick={uploadImage}>点击上传</button>\n  </div> */}\n  {/* <div\n    {...getRootProps()}\n    // className={`${styles.dropzone} ${isDragActive ? styles.active : null}`}\n  >\n    <input {...getInputProps()} />\n    <h1>Drop Zone</h1>\n  </div> */}\n}\n\nexport default FileUpload;\n","import React, { Component } from 'react';\nimport ReactDom from 'react-dom';\nimport { Image, Video, Transformation, CloudinaryContext } from 'cloudinary-react';\nimport FileUpload from './components/FileUpload';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cloudName: \"pengushe-home\",\n      publicId: 'sample',\n      width: '0.5',\n      crop: 'scale',\n      value: '',\n      copied: false,\n    };\n    this.filterID = this.filterID.bind(this);\n    this.changWidth = this.changWidth.bind(this);\n  }\n  filterID(event) {\n    this.setState({ publicId: event.target.value });\n    event.preventDefault();\n  }\n  changWidth(event) {\n    this.setState({ width: event.target.value });\n    event.preventDefault();\n  }\n  setValue(value) {\n    this.setState({ value: value });\n  }\n  render() {\n    return (\n      <div>\n        {/* 上传文件 */}\n        <FileUpload selectValue={\n          { setValue: this.setValue.bind(this) }\n        } />\n        <div>\n          <div class=\"mb-3\">\n            <input type=\"text\" class=\"form-control\" aria-label=\"Default\" aria-describedby=\"inputGroup-sizing-default\"\n              value={this.state.value}\n              onChange={({ target: { value } }) => this.setState({ value, copied: false })} readOnly />\n            <CopyToClipboard text={this.state.value}\n              onCopy={() => this.setState({ copied: true })}>\n              <button>复制图片的URL</button>\n            </CopyToClipboard>\n          </div>\n\n\n          {this.state.copied ? <span style={{ color: 'red' }}>Copied.</span> : null}\n        </div>\n        {/* -end- */}\n        <div className=\"input-group mb-3\">\n          <div className=\"input-group-prepend\">\n            <span className=\"input-group-text\" id=\"inputGroup-sizing-default\">查看已经上传的图片</span>\n          </div>\n          <input type=\"text\" className=\"form-control\" aria-label=\"Default\" aria-describedby=\"inputGroup-sizing-default\" onChange={this.filterID} />\n          <div className=\"input-group-prepend\">\n            <span className=\"input-group-text\" id=\"inputGroup-sizing-default\">更改大小 0.5(%) 或者 200 px</span>\n          </div>\n          <input type=\"text\" className=\"form-control\" aria-label=\"Default\" aria-describedby=\"inputGroup-sizing-default\" onChange={this.changWidth} />\n\n        </div>\n        <CloudinaryContext cloudName={this.state.cloudName}>\n          <Image publicId={this.state.publicId} width={this.state.width} crop=\"scale\" />\n        </CloudinaryContext>\n        <p> 已经上传的图片\n          youyou1,youyou2,donggua1,test1,test2,test3\n        </p>\n      </div>\n    );\n  }\n}\n\nReactDom.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}